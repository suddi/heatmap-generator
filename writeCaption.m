function img = writeCaption(mapSet, img, type)
%WRITECAPTION Add a caption for the image

    settings;
    
    text = vision.TextInserter('%s', 'LocationSource', 'Input port', 'Color', ...
        [255, 255, 255], 'FontSize', 18);
    
    if strcmp(DISTINGUISH, '') && RENDER == OBJECT
        locs = int32([ ...
            10, 690; ...
            10, 720; ...
            10, 750; ...
            10, 780; ...
            10, 810 ...
        ]);
    elseif ~strcmp(DISTINGUISH, '') && RENDER == OBJECT
        locs = int32([ ...
            10, 1150; ...
            10, 1200; ...
            10, 1250; ...
            10, 1300; ...
            10, 1350; ...
            10, 1400; ...
            10, 1450; ...
            10, 1500; ...
            1024, 1150; ...
            1024, 1200; ...
            1024, 1250; ...
            1024, 1300; ...
            1024, 1350; ...
            1024, 1400; ...
            1024, 1450; ...
            1024, 1500 ...
        ]);
    else
        locs = int32([ ...
            10, 1150; ...
            10, 1200; ...
            10, 1250; ...
            10, 1300; ...
            10, 1350; ...
            10, 1400; ...
            10, 1450; ...
            10, 1500 ...
        ]);
    end
    
    if RENDER ~= OBJECT
        if mapSet(1).isSame
            type = 'Same';
        else
            type = 'Different';
        end
    
        if mapSet(1).key == 'z'
            answer = 'Same';
        elseif mapSet(1).key == 'm'
            answer = 'Different';
        end
    end
    
    if strcmp(DISTINGUISH, '') || RENDER == TRIAL
        mapSetSize = size(mapSet, 2);
        fixData = cat(1, [], mapSet(1:mapSetSize).fixData);
        fixDur = fixData(:, 2);
        percentCorrect = size(find([mapSet.isCorrect] == true), 2) / mapSetSize;
        maxFix = round(max(fixDur));
        minFix = round(min(fixDur));

        totalDur = round(sum(fixDur));
        totalFix = size(fixDur, 1);
    elseif ~strcmp(DISTINGUISH, '')
        if RENDER == OBJECT
            option = [true, false];
            for i = 1:size(option, 2)
                if strcmp(DISTINGUISH, 'correct')
                    index = find([mapSet.isCorrect] == option(i));
                elseif strcmp(DISTINGUISH, 'same')
                    index = find([mapSet.isSame] == option(i));
                end
                subset{i} = mapSet(index);
            end
            for i = 1:size(subset, 2)
                subsetSize = size(subset{i}, 2);
                fixData = cat(1, [], subset{i}(1:subsetSize).fixData);
                if size(fixData, 1) ~= 0
                    fixDur = fixData(:, 2);
                    percentCorrect{i} = size(find([subset{i}.isCorrect] == true), 2) / subsetSize;
                    maxFix{i} = round(max(fixDur));
                    minFix{i} = round(min(fixDur));
                    totalDur{i} = round(sum(fixDur));
                    totalFix{i} = size(fixDur, 1);
                else
                    fixDur = 0;
                    percentCorrect{i} = 0.0;
                    maxFix{i} = 0;
                    minFix{i} = 0;
                    totalDur{i} = 0;
                    totalFix{i} = 0;
                end
            end
        elseif RENDER == PAIR
            if strcmp(DISTINGUISH, 'correct')
                index = find([mapSet.isCorrect] == true);
            elseif strcmp(DISTINGUISH, 'incorrect')
                index = find([mapSet.isCorrect] == false);
            end
            subset = mapSet(index);
            subsetSize = size(subset, 2);
            fixData = cat(1, [], subset(1:subsetSize).fixData);
            if size(fixData, 1) == 0
                percentCorrect = 0.0;
                maxFix = 0;
                minFix = 0;
                totalDur = 0;
                totalFix = 0;
            else
                fixDur = fixData(:, 2);
                percentCorrect = size(find([subset.isCorrect] == true), 2) / subsetSize;
                maxFix = round(max(fixDur));
                minFix = round(min(fixDur));
                totalDur = round(sum(fixDur));
                totalFix = size(fixDur, 1);
            end
        end
    end
    clear mapSetSize fixData fixDur option index subset subsetSize;
    
    switch RENDER
        case TRIAL
            strings = uint8([ ...
                ['Object Set: ', int2str(mapSet(1).objectSet), '_', int2str(mapSet(1).leftObject), ...
                                 '_', int2str(mapSet(1).rightObject)], 0, ...
                ['Type: ', type], 0, ...
                ['Answer: ', answer], 0, ...
                ['Eye: ', mapSet(1).eye], 0, ...
                ['Total Time: ', int2str(mapSet(1).rt)], 0, ...
                ['Maximum Fixation: ', int2str(maxFix)], 0, ...
                ['Minimum Fixation: ', int2str(minFix)], 0, ...
                ['Total Fixations: ', int2str(mapSet(1).totalFix)] ...
            ]);
        case PAIR
            strings = uint8([ ...
                ['Object Set: ', int2str(mapSet(1).objectSet), '_' , int2str(mapSet(1).leftObject), ...
                                 '_', int2str(mapSet(1).rightObject)], 0, ...
                ['Type: ', type], 0, ...
                ['Percent Correct: ', int2str(percentCorrect * 100), '%'], 0, ...
                ['Eye: ', mapSet(1).eye], 0, ...
                ['Total Time: ', int2str(totalDur)], 0, ...
                ['Maximum Fixation: ', int2str(maxFix)], 0, ...
                ['Minimum Fixation: ', int2str(minFix)], 0, ...
                ['Total Fixations: ', int2str(totalFix)] ...
            ]);
        case OBJECT
            if strcmp(DISTINGUISH, '')
                strings = uint8([ ...
                    ['Eye: ', mapSet(1).eye], 0, ...
                    ['Total Time: ', int2str(totalDur)], 0, ...
                    ['Maximum Fixation: ', int2str(maxFix)], 0, ...
                    ['Minimum Fixation: ', int2str(minFix)], 0, ...
                    ['Total Fixations: ', int2str(totalFix)] ...
                ]);
            else
                if strcmp(type, 'LEFT')
                    object = int2str(mapSet(1).leftObject);
                elseif strcmp(type, 'RIGHT')
                    object = int2str(mapSet(1).rightObject);
                elseif strcmp(type, 'EITHER')
                    object = int2str(mapSet(1).leftObject);
                end
                
                if strcmp(DISTINGUISH, 'correct')
                    dist1 = '_correct';
                    dist2 = '_incorrect';
                elseif strcmp(DISTINGUISH, 'same')
                    dist1 = '_same';
                    dist2 = '_different';
                end
                
                strings = uint8([ ...
                    ['Object Set: ', int2str(mapSet(1).objectSet), object, dist1], 0, ...
                    ['Type: ', type], 0, ...
                    ['Percent Correct: ', int2str(percentCorrect{1} * 100), '%'], 0, ...
                    ['Eye: ', mapSet(1).eye], 0, ...
                    ['Total Time: ', int2str(totalDur{1})], 0, ...
                    ['Maximum Fixation: ', int2str(maxFix{1})], 0, ...
                    ['Minimum Fixation: ', int2str(minFix{1})], 0, ...
                    ['Total Fixations: ', int2str(totalFix{1})], 0, ...
                    ['Object Set: ', int2str(mapSet(1).objectSet), object, dist2], 0, ...
                    ['Type: ', type], 0, ...
                    ['Percent Correct: ', int2str(percentCorrect{2} * 100), '%'], 0, ...
                    ['Eye: ', mapSet(1).eye], 0, ...
                    ['Total Time: ', int2str(totalDur{2})], 0, ...
                    ['Maximum Fixation: ', int2str(maxFix{2})], 0, ...
                    ['Minimum Fixation: ', int2str(minFix{2})], 0, ...
                    ['Total Fixations: ', int2str(totalFix{2})], 0, ...
                ]);
            end
            clear object dist1 dist2;
    end     
    
    img = step(text, img, strings, locs);
    clear mapSet type text strings locs;
end

